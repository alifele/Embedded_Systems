How To run the ADC with Interrupt in stm32f103rctx


In this project we are going to run ADC with interrupt. the number of channels is just one (which in this case is the PA1)
So lets do it:



First in CUBE MX select the PA1 as ADC_1. then in the setting of the selected channel, turn the NVIC on.

But what to do in your code?

Here is a very stasfing 'How to' in stm32f1xxx_hal_adc.c document:



(++) ADC conversion by interruption: 
          (+++) Activate the ADC peripheral and start conversions
                using function HAL_ADC_Start_IT()
          (+++) Wait for ADC conversion completion by call of function
                HAL_ADC_ConvCpltCallback()
                (this function must be implemented in user program)
                (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
          (+++) Retrieve conversion results 
                using function HAL_ADC_GetValue()
                (or for injected group: HAL_ADCEx_InjectedGetValue() )
          (+++) Stop conversion and disable the ADC peripheral 
                using function HAL_ADC_Stop_IT()



So according to this 'How to' you should first initialize the adc struct:

	hadc1.Init.NbrOfConversion = 1;

Since we have just one conversion in the ADC_1, so we dont need to change the number of conversion any more. so you can put the above code put of the 
while loop.

then when you want to get the data from ADC, you need to first start the conversion:
	
	HAL_ADC_Start_IT(&hadc1);

this will start the conversion and will cause in interrupt. in the body of this function the HAL_ADC_ConvCpltCallback() (Conversion Complete Callback)function will be called.
So you need to overwrite it in the stm32f1xxx_it.c file:

	void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
		val = HAL_ADC_GetValue(hadc);
	}




now in the while loop you should turn the adc off by HAL_ADC_Stop_IT()


So in a nutshell the while loop must be some think like this:


while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		
		HAL_ADC_Init(&hadc1);
		HAL_ADC_Start_IT(& hadc1);
		HAL_ADC_Stop_IT(& hadc1);
		
		
		HAL_Delay(300);
		
  }


















